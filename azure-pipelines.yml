trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  dockerRegistryServiceConnection: '<your-service-connection>'
  imageRepository: '<your-docker-repository>'
  containerRegistry: 'yourregistry'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  jobs:
  - job: Build
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '6.x.x'
        installationPath: $(Agent.ToolsDirectory)/dotnet

    - task: Docker@2
      inputs:
        containerRegistry: '$(dockerRegistryServiceConnection)'
        repository: '$(imageRepository)'
        command: 'buildAndPush'
        Dockerfile: '$(dockerfilePath)'
        tags: |
          $(tag)
          latest

- stage: Deploy
  jobs:
  - deployment: DeployWebApp
    environment: 'development'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop

          - script: |
              docker run -d -p 80:80 --name $(imageRepository) $(containerRegistry)/$(imageRepository):$(tag)
            displayName: 'Run container'
